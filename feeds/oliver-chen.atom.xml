<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>HackerSpaceTech</title><link href="http://www.hackerspacetech.com/" rel="alternate"></link><link href="http://www.hackerspacetech.com/feeds/oliver-chen.atom.xml" rel="self"></link><id>http://www.hackerspacetech.com/</id><updated>2016-12-15T00:00:00-06:00</updated><entry><title>Arduino101 BLE Autonomous Rover</title><link href="http://www.hackerspacetech.com/arduino101-ble-autonomous-rover.html" rel="alternate"></link><published>2016-12-15T00:00:00-06:00</published><updated>2016-12-15T00:00:00-06:00</updated><author><name>Oliver Chen</name></author><id>tag:www.hackerspacetech.com,2016-12-15:arduino101-ble-autonomous-rover.html</id><summary type="html">
        &lt;img src="images/ble-autonomous-rover/tmp_image_0.jpg" class="img-responsive img-rounded center-block" style="padding:30px"&gt; 
        &lt;h4&gt;About This Project:&lt;/h4&gt;
        &lt;p&gt;This project is an expansion of the Arudino101 BLE Rover, where I had provided some Seeedstudio Skeleton Bot 4WD versatile mechanical stage packs to a group directing a Maker encounter for Oakland, CA High School understudies. The purpose of this instructional exercise is to show how by including sensors you can make a stage to investigate how to program a self-ruling self driving vehicle.&lt;/p&gt;
        &lt;br&gt;
        &lt;h4&gt;Parts used in project&lt;/h4&gt;
        &lt;ul&gt;
            &lt;li&gt;&lt;a href="http://amzn.to/2hRDhnc" rel="nofollow" target="_blank"&gt;Arduino 101&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href="http://amzn.to/2hoFFEK" rel="nofollow" target="_blank"&gt;SeeedStudio Skeleton Bot - 4WD Mobile Robotic Platform&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href="http://amzn.to/2hoCBsB" rel="nofollow" target="_blank"&gt;SeeedStudio Grove Starter Kit for Arduino101&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href="http://amzn.to/2gOKiHv" rel="nofollow" target="_blank"&gt;SeeedStudio Grove I2C Motor Driver Board&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href="http://amzn.to/2hA81cS" rel="nofollow" target="_blank"&gt;SeeedStudio Grove 80cm Infrared Proximity Sensor&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
        &lt;br&gt;
        &lt;h4&gt;Section 1: Assemble the basic rover&lt;/h4&gt;
        &lt;p&gt;This project depends on the Arduino 101 BLE rover, so you can audit the Assemble the Rover and Electrical Assembly Steps. I have included definite headings, as I have changed the introduction of the Arduino101 mount point, and utilize a moment engine controller to diminish likely hood of free wires after impacts.&lt;/p&gt;
        &lt;p&gt;Mount the Arduino101 and Motor Controllers – Mount the Arduino101 onto the acrylic mounting plate and secure it with the metal screws. Mount the engine controller onto the acrylic mounting plate and secure it with the little metal screws. Set the engine controller so that the one mounted in the center is 1, and the one in the front is 2 (see figure 1).&lt;/p&gt;
        &lt;img src="images/ble-autonomous-rover/image_1.jpg" class="img-responsive img-rounded center-block" style="padding:30px"&gt;
        &lt;div class="text-center"&gt;&lt;h6&gt;figure 1&lt;/h6&gt;&lt;/div&gt;
        
        &lt;p&gt;Gather the power links – The battery pack parts the yield between the engines and different gadgets. Amass the power links as appeared in the photo (see figure 2).&lt;/p&gt;
        &lt;img src="images/ble-autonomous-rover/image_2.jpg" class="img-responsive img-rounded center-block" style="padding:30px"&gt;
        &lt;div class="text-center"&gt;&lt;h6&gt;figure 2&lt;/h6&gt;&lt;/div&gt;
        
        &lt;p&gt;Power links and engine wires – Pass the power links and engine wires through the acrylic mounting plate. Take note of the area of the engine controller terminals; attempt to course the engine wires nearer to them (see figure 3).&lt;/p&gt;
        
        &lt;img src="images/ble-autonomous-rover/image_3.jpg" class="img-responsive img-rounded center-block" style="padding:30px"&gt;
        &lt;div class="text-center"&gt;&lt;h6&gt;figure 3&lt;/h6&gt;&lt;/div&gt;
        
        &lt;p&gt;Wire motors to motor controllers – There are a sum of 8 wires (2 for each engine) shading coded in sets. Associate every engine to the engine controllers in view of the accompanying: right side engine wires go to the engine controller terminals amidst the skeleton; left side engine wires go to the engine controller terminals in the front of the suspension (see figure 4).&lt;/p&gt;
        
        &lt;img src="images/ble-autonomous-rover//image_4.jpg" class="img-responsive img-rounded center-block" style="padding:30px"&gt;
        &lt;div class="text-center"&gt;&lt;h6&gt;figure 4&lt;/h6&gt;&lt;/div&gt;
        
        &lt;p&gt;Wire power cables – Wire the power cables to the motor controllers (red is positive, black is negative). Make sure to tighten all terminals to prevent wires from disconnecting (see figure 5).&lt;/p&gt;
        
        &lt;img src="images/ble-autonomous-rover/image_5.jpg" class="img-responsive img-rounded center-block" style="padding:30px"&gt;
        &lt;div class="text-center"&gt;&lt;h6&gt;figure 5&lt;/h6&gt;&lt;/div&gt;
        
        &lt;p&gt;Introducing the Grove Shield – Insert the Grove shield onto the Arduino breakout board. Associate the engine controllers to the Grove Shield in any I2C named port utilizing the Grove links (see figure 6).&lt;/p&gt;
        &lt;img src="images/ble-autonomous-rover/image_6.jpg" class="img-responsive img-rounded center-block" style="padding:30px"&gt;
        &lt;div class="text-center"&gt;&lt;h6&gt;figure 6&lt;/h6&gt;&lt;/div&gt;
        
        &lt;p&gt;Mounting the Acrylic Plate and Add Sensors – Secure the acrylic plate to the principle case utilizing the four metal connectors. Interface the Grove LED to Grove Shield port D2 (see figure 7).&lt;/p&gt;
        &lt;img src="images/ble-autonomous-rover/image_7.jpg" class="img-responsive img-rounded center-block" style="padding:30px"&gt;
        &lt;div class="text-center"&gt;&lt;h6&gt;figure 7&lt;/h6&gt;&lt;/div&gt;
        
        &lt;p&gt;Mounting the Aluminum Plate – Secure the aluminum mounting plate on top of the acrylic mounting plate utilizing the screws (see figure 8).&lt;/p&gt;
        &lt;img src="images/ble-autonomous-rover/image_8.jpg" class="img-responsive img-rounded center-block" style="padding:30px"&gt;
        &lt;div class="text-center"&gt;&lt;h6&gt;figure 8&lt;/h6&gt;&lt;/div&gt;
        
        &lt;p&gt;Installing the wheels – Install the 4 wheels onto the drive shafts (see figure 9).&lt;/p&gt;
        &lt;img src="images/ble-autonomous-rover/image_9.jpg" class="img-responsive img-rounded center-block" style="padding:30px"&gt;
        &lt;div class="text-center"&gt;&lt;h6&gt;figure 9&lt;/h6&gt;&lt;/div&gt;
        
        &lt;h4&gt;Section 2: Programming the basic rover&lt;/h4&gt;
        &lt;p&gt;Interface the DC barrel jack to the Arduino 101. Associate the Li-Po battery to the Dean's male Traxxas association. Associate a USB programming link to the Arduino 101 and to your PC.&lt;/p&gt;
        &lt;p&gt;You'll require the Arduino IDE introduced on your PC, with the Intel Curie Core (see Arduino 101 beginning.) If you are new to Arduino, it's a smart thought to keep running in the Arduino IDE File - &gt; Examples - &gt; 01.Basics - &gt; Blink to check that everything is working. The squinting on board LED can be seen from the side of the meanderer under the Grove Shield. Once that is checked you can stack the code, which is in the venture code area.&lt;/p&gt;
        &lt;p&gt;I utilize an indistinguishable Arduino101 and Grove Motor Controller from the Programming the Arduino101 for a fundamental wanderer so look at it for a review of how BLE is setup, and the engines are controlled utilizing the Grove Motor Controller. Since the first base model code utilized one engine controller, and two are utilized here, there are some essential changes that I needed to make&lt;/p&gt;
        &lt;p&gt;In any case, the main real augmentation that I added was to prepare the entire UART transmitted string rather simply the primary character. This permits the charges between the meanderer and the BLE cell phone to be more comprehensible. For instance, "a" go ahead got to be: "Auto:Up" and "b" turn left got to be: "Auto:Left".&lt;/p&gt;
        &lt;p&gt;This additionally implies the BLE Mobile control interface utilizing nRF tool stash UART needs to send diverse strings than that of the first venture, which utilized single characters for development. In this venture:&lt;/p&gt;
        &lt;ul&gt;
            &lt;li&gt;“Auto:Up” Moves the rover - Forward&lt;/li&gt;
            &lt;li&gt;“Auto:Left” Moves the rover - Left&lt;/li&gt;
            &lt;li&gt;“Auto:Right” Moves the rover - Right&lt;/li&gt;
            &lt;li&gt;“Auto:Back” Moves the rover - Reverse&lt;/li&gt;
            &lt;li&gt;“Auto:Stop” Stops the rover&lt;/li&gt;
        &lt;/ul&gt;
        
        &lt;p&gt;You can configure nRF toolbox to act as a mobile BLE interface, by following these steps:&lt;/p&gt;
        &lt;ol&gt;
            &lt;li&gt;Install nRF Toolbox for your mobile device in either the iOS or Android app store.&lt;/li&gt;
            &lt;li&gt;Launch the nRF Toolbox on your mobile device.&lt;/li&gt;
            &lt;li&gt;Select the UART icon. There are nine user definable buttons in a 3x3 grid. If this is the first time, the default layout is called UART and blank.&lt;/li&gt;
            &lt;li&gt;Press the ‘EDIT’ button in the upper right corner.&lt;/li&gt;
        &lt;/ol&gt;
        
        &lt;p&gt;The framework shading will turn orange demonstrating it is in "Alter" show. Touching an individual catch in the network raises a setup screen where you can pick a symbol for that catch, and enter the fitting string. Do this for every one of the 5 meanderer orders. You can spare this to another name (see figures 10-12)&lt;/p&gt;
        
        
        
        &lt;div class="container-fluid"&gt;
            &lt;row&gt;
                &lt;div class="col-sm-4"&gt;
                    &lt;h6 class="text-center"&gt;figure 10&lt;/h6&gt;
                    &lt;a href="/images/ble-autonomous-rover/image_10.jpg" title="Click To Enlarge"&gt;&lt;img src="/images/ble-autonomous-rover/image_10.jpg" class="img-rounded img-responsive img-thumbnail"&gt;&lt;/a&gt;
                &lt;/div&gt;
                &lt;div class="col-sm-4"&gt;
                    &lt;h6 class="text-center"&gt;figure 11&lt;/h6&gt;
                    &lt;a href="/images/ble-autonomous-rover/image_11.jpg" title="Click To Enlarge"&gt;&lt;img src="/images/ble-autonomous-rover/image_11.jpg" class="img-rounded img-responsive img-thumbnail"&gt;&lt;/a&gt;
                &lt;/div&gt;
                &lt;div class="col-sm-4"&gt;
                    &lt;h6 class="text-center"&gt;figure 12&lt;/h6&gt;
                    &lt;a href="/images/ble-autonomous-rover/image_12.jpg" title="Click To Enlarge"&gt;&lt;img src="/images/ble-autonomous-rover/image_12.jpg" class="img-rounded img-responsive img-thumbnail"&gt;&lt;/a&gt;
                &lt;/div&gt;
            &lt;/row&gt;
        &lt;/div&gt;
       
        &lt;br&gt;
        &lt;ol start="5"&gt;
            &lt;li&gt;Select the ‘DONE’ button to run.&lt;/li&gt;
            &lt;li&gt;Select ‘CONNECT’.&lt;/li&gt;
            &lt;li&gt;Select the BLE name from your Arduino sketch, 4WDUART for example.&lt;/li&gt;
            &lt;li&gt;Press the defined buttons to move the rover.&lt;/li&gt;
            &lt;li&gt;Press ‘DISCONNECT’.&lt;/li&gt;
            &lt;li&gt;Exit the app.&lt;/li&gt;
        &lt;/ol&gt;
        &lt;br&gt;
        &lt;h4&gt;Section 3: Basic troubleshooting&lt;/h4&gt;
        
        &lt;p&gt;If the motors do not turn at all, the I2C Grove Motor Drivers my need to be reset via a small button on the board (see figure 13).&lt;/p&gt;
        
        &lt;p&gt;To confirm that the wiring was done effectively, test code for the engine drivers can be utilized. If you don't mind reference the Testing Motor Control venture of Arduino101 BLE Rover extend this depends on for more subtle elements.&lt;/p&gt;
        
        &lt;p&gt;To verify BLE connectivity, nRF Connect for mobile can be used. Please reference the &lt;a href="https://www.hackster.io/shadeydave/arduino-101-ble-rover-remote-control-ae03be?ref=search&amp;amp;ref_id=arduino101&amp;amp;offset=1" rel="nofollow" target="_blank"&gt;Arduino101 BLE Rover Remote Control&lt;/a&gt; for more details.&lt;/p&gt;
        &lt;br&gt;
        &lt;h4&gt;Section 4: Adding autonomous mode&lt;/h4&gt;
        &lt;p&gt;I included a Grove 80cm Infrared Proximity Sensor to the front of the meanderer to distinguish approaching impediments. It is joined to the Grove shield at port A0 by a Grove link. By utilizing the code piece on the sensor's wiki, I found that I could distinguish obstructions with enough time to respond when the simple voltage was &gt;1. With the second significant expansion of the base meanderer code, I included support for a self-ruling mode, where when the UART sends a string "Auto:Auto" the wanderer drives forward until a snag is recognized, and after that the meanderer will substitute turning left and appropriate for shirking.&lt;/p&gt; 
        
        &lt;p&gt;To change the nRF Toolbox to support the autonomous mode, follow this proceedure:&lt;/p&gt;
        &lt;ol&gt;
            &lt;li&gt;Execute the nRF Toolbox on your mobile device.&lt;/li&gt;
            &lt;li&gt;Choose the UART icon. Choose the UART layout that you had configured for the basic rover.&lt;/li&gt;
            &lt;li&gt;Press the "Edit" catch in the upper right corner. The framework shading will turn orange demonstrating it is in "Alter" show. Touching an individual catch in the matrix raises a setup screen where you can pick a symbol for that catch, and enter the proper string. Touch an unused catch, and set the symbol to play and set the string to "Auto:Auto".&lt;/li&gt;
            &lt;li&gt;Chose the ‘DONE’ button to run.&lt;/li&gt;
            &lt;li&gt;Chose ‘CONNECT.&lt;/li&gt;
            &lt;li&gt;Chose the BLE name from your Arduino sketch, 4WDUART for example.&lt;/li&gt;
            &lt;li&gt;Chose the defined buttons to move the rover.&lt;/li&gt;
            &lt;li&gt;Chose ‘DISCONNECT&lt;/li&gt;
            &lt;li&gt;Exit the app.&lt;/li&gt;
        &lt;/ol&gt;
        &lt;br&gt;
        &lt;h4&gt;Section 5: Final comments and further enhancements&lt;/h4&gt;
        &lt;p&gt;This venture expands on top of the first Arduino101 BLE meanderer by utilizing sensors to make a stage where designers can attempt their hands at programming an independent vehicle. Things to investigate promote on the wanderer code are: more modern deterrent shirking, numerous nearness sensors to permit the meanderer to recognize and respond to various sorts of crashes, distinctive sorts of sensors to upgrade for lighting conditions. Things to investigate promote on the BLE gadget are: interfaces past the straightforward advanced 3x3 catch framework like a simple joystick, or directing haggle quickening agent pedal, and controlling numerous meanderers from the same BLE focal gadget in the meantime. Things to investigate advance on utilize cases are: genuine execution of a run truck computer game with sensors distinguishing powers ups, apply autonomy challenges like line taking after.&lt;/p&gt;
        
        &lt;img src="/images/ble-autonomous-rover/schem1.png" width="80%" class="img-responsive img-rounded center-block" style="padding:30px"&gt;
        
        &lt;img src="images/ble-autonomous-rover/schem2.png" width="80%" class="img-responsive img-rounded center-block" style="padding:30px"&gt;
        
        &lt;script src="https://gist.github.com/driewe/f910b150ce3b8243b286837979606a2c.js"&gt;&lt;/script&gt;
        
            &lt;br&gt;
            &lt;div class="text-center"&gt;&lt;h6&gt;Content edited by HackerSpaceTech as granted by &lt;a href="https://creativecommons.org/licenses/by-sa/4.0" rel="nofollow" target="_blank"&gt;CC BY-SA&lt;/a&gt; does not carry any endorsement from original author&lt;/h6&gt;&lt;/div&gt;
    </summary><category term="Arduino"></category><category term="Arduino101"></category><category term="Rover"></category><category term="BLE"></category><category term="Tutorials"></category></entry></feed>